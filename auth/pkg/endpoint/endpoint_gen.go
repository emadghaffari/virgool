// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/emadghaffari/virgool/auth/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	RegisterEndpoint endpoint.Endpoint
	LoginUPEndpoint  endpoint.Endpoint
	LoginPEndpoint   endpoint.Endpoint
	VerifyEndpoint   endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.AuthService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		LoginPEndpoint:   MakeLoginPEndpoint(s),
		LoginUPEndpoint:  MakeLoginUPEndpoint(s),
		RegisterEndpoint: MakeRegisterEndpoint(s),
		VerifyEndpoint:   MakeVerifyEndpoint(s),
	}
	for _, m := range mdw["Register"] {
		eps.RegisterEndpoint = m(eps.RegisterEndpoint)
	}
	for _, m := range mdw["LoginUP"] {
		eps.LoginUPEndpoint = m(eps.LoginUPEndpoint)
	}
	for _, m := range mdw["LoginP"] {
		eps.LoginPEndpoint = m(eps.LoginPEndpoint)
	}
	for _, m := range mdw["Verify"] {
		eps.VerifyEndpoint = m(eps.VerifyEndpoint)
	}
	return eps
}
