// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/emadghaffari/virgool/notification/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	SMSEndpoint    endpoint.Endpoint
	SMSTEndpoint   endpoint.Endpoint
	EmailEndpoint  endpoint.Endpoint
	VerifyEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.NotificationService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		EmailEndpoint:  MakeEmailEndpoint(s),
		SMSEndpoint:    MakeSMSEndpoint(s),
		SMSTEndpoint:   MakeSMSTEndpoint(s),
		VerifyEndpoint: MakeVerifyEndpoint(s),
	}
	for _, m := range mdw["SMS"] {
		eps.SMSEndpoint = m(eps.SMSEndpoint)
	}
	for _, m := range mdw["SMST"] {
		eps.SMSTEndpoint = m(eps.SMSTEndpoint)
	}
	for _, m := range mdw["Email"] {
		eps.EmailEndpoint = m(eps.EmailEndpoint)
	}
	for _, m := range mdw["Verify"] {
		eps.VerifyEndpoint = m(eps.VerifyEndpoint)
	}
	return eps
}
